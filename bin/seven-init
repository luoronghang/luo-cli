#!/usr/bin/env node

const program = require('commander'),
      chalk = require('chalk'),
      path = require('path'),
      fs = require('fs'),
      fse = require('fs-extra'),
      exists = require('fs').existsSync,
      inquirer = require('inquirer');

/**
 * 1、npm init
 * 2、input:输入项目名称，并校验项目名称是否存在
 * 3、list:选择框架类型
 * 4、接受用户输入（项目名称和框架类型），执行项目创建
 *    基于目前的cp还是 git donwload ？
 * 5、安装 npm 包
 * 6、success！ 
 * **/

//交互项
const promptList = [
  {
    type: 'input',
    message: '请输入项目名称:',
    name: 'name',
    default: "seven_project_init" // 默认值
  },
  {
    type: 'list',
    message: '请选择项目类型:',
    name: 'type',
    choices:[
      'vue2',
      'vue3',
      'react',
      'nodejs'
    ]
  }
];

//parse输入的参数
program.parse(process.argv);

// console.log(program.args)
// console.log(path.relative('../',process.cwd()))

inquirer.prompt(promptList).then(answers => {
  run(answers);
  console.log(answers)
});

function run (answers){
  //check
  const isExists = exists(process.cwd() + '/' + answers.name);
  console.log(process.cwd() + '/' + answers.name);
  if(isExists){
    console.log('项目已经存在，请使用其他名称！');
    process.exit(1)
    return;
  }
  //create
  const tplPath = process.cwd()+'/packages/' + answers.type; //此文件的执行目录，需要调整
  const targetPath = process.cwd() + '/' + answers.name; //当前工作目录
  console.log('模板目录::::::'+tplPath);
  console.log('目标目录::::::'+targetPath);
  fse.copy(tplPath,targetPath,{}).then(function(){
    console.log('success!!');
  }).catch(function(){
    console.log('fail!!');
  })
}

//监听退出事件
process.on('exit', function() {
  console.log('已退出 seven init');
});

program.on('--help',function(){
  console.log();
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project'))
  console.log('    $ seven init ${project-name}')
  console.log()
});

//安装npm包依赖
function installDependencies(){

}

//检查版本
function checkVersion(){

}
